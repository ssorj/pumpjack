<module name="client">
  An imperative client API.

  **Blocking**

  The endpoint-lifecycle methods `connect()`, `open-session()`,
  `open-sender()`, and `open-receiver()` start their respective
  operations but do not complete them.  Use `&lt;endpoint&gt;.wait()`
  to block until the connect or open operation completes.

  All endpoints have a `close()` method that returns an awaitable
  task.

  The sender `send()` method returns an awaitable task that resolves
  to a `tracker` object when the delivery is complete.

  The receiver `receive()` method returns an awaitable task that
  resolves to a `delivery` object as soon as a delivery is available.
  
  Blocking operations take optional timeout arguments.  If the timeout
  is exceeded, they raise a timeout error.

  <annotation name="requires">core</annotation>

  <group name="model" title="Core model">
    @client-class.xml@
    @client-endpoint.xml@
    @client-connection.xml@
    @client-session.xml@
    @client-link.xml@
    @client-sender.xml@
    @client-receiver.xml@
  </group>
</module>
